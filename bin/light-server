#!/usr/bin/env node

/**
 * light-server
 *
 * Serve, watch, exucute commands and live-reload, all in one.
 *
 * Copyright (c) 2015 by Tianxiang Chen
 */

var LightServer = require('../index')
var program = require('commander')

function main(argv) {

  function collect(val, memo) {
    memo.push(val)
    return memo
  }

  program.version(require('../package').version)
    .option('-s, --serve <directory>', 'serve the directory as static http')
    .option('-p, --port <port>', 'http server port, default 4000', parseInt)
    .option('-b, --bind <bind>', 'bind to a specific host, default 127.0.0.1')
    .option('-w, --watchexp <watch expression>', 'watch expression, repeatable', collect, [])
    .option('-i, --interval <watch inteval>', 'interval in ms of watching, default 500', parseInt)
    .option('-d, --delay <livereolad delay>', 'delay in ms before triggering live reload, default 0', parseInt)
    .option('-x, --proxy <upstreamurl>', 'when file not found, proxy the request to another server')
    .option('-q, --quiet', 'quiet mode with minimum log message')
    .on('--help', function() {
       console.log('  Examples:')
       console.log('')
       console.log('    $ light-server -s . -p 7000')
       console.log('    $ light-server -s . -w "*.js, src/** # npm run build && echo wow!"')
       console.log('    $ light-server -s . -x http://localhost:8000')
       console.log('    $ light-server -s . -b 10.0.0.1')
       console.log('    $ light-server -x http://localhost:9999 -w "public/**"')
       console.log('    $ light-server -s static -w "**/*.css # # reloadcss"')
       console.log('')
       console.log('  Watch expression syntax: "files[,files] # [command to run] # [reload action]"')
       console.log('    3 parts delimited by #')
       console.log('    1st part: files to watch, support glob format, delimited by ","')
       console.log('    2nd part: (optional) command to run, before reload')
       console.log('    3rd part: (optional) reload action, default is "reload", also support "reloadcss"')
       console.log('    Examples: ')
       console.log('      "**/*.js, index.html # npm run build # reload"')
       console.log('      "*.css # # reloadcss"')
       console.log('      "** # make"')
       console.log('')
     })

  if (argv.length == 0) {
    process.argv.push('--help')
  }

  program.parse(process.argv)

  options = {}
  options.port = program.port || 4000
  options.interval = program.interval || 500
  options.delay = program.delay || 0
  options.host = program.bind || 'localhost'
  options.log = ! program.quiet

  if (!program.serve && !program.watchexp.length && !program.proxy) {
    console.log('Please use http-server and/or watch and/or proxy, but not nothing.')
    process.exit(1)
  }

  ls = LightServer(program.serve, program.watchexp, program.proxy, options)
  ls.start()
}

main(process.argv.slice(2))
